{"mappings":"AA6BA,MAAMA,EAAO,CACXC,MAAOC,SAASC,cAAc,kBAC9BC,KAAMF,SAASC,cAAc,iBAC7BE,OAAQH,SAASC,cAAc,mBAC/BG,aAAcJ,SAASC,cAAc,qBAEjCF,MAAEM,EAAKH,KAAEI,EAAIH,OAAEI,EAAMH,aAAEI,GAAiBV,EAE9CA,EAAKM,aAAaK,iBAAiB,SAEnC,SAA6BC,GAC3BA,EAAEC,iBAEF,SAASC,EAAOC,EAAI,GAClB,IAAIC,EAAQD,EACRE,IAAcV,EAAMW,QAAUV,EAAKU,MAAQF,EAE3CG,OAAOV,EAAOS,OAASF,IA9C/B,SAAuBI,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAC/B,IAAIC,SAAQ,CAACC,EAAKC,KACvBC,YAAW,KACLN,EACFI,EACExB,SAAS2B,KAAKC,mBACZ,YACA,6FAA2FV,QAAiBC,eAIhHM,EACEzB,SAAS2B,KAAKC,mBACZ,YACA,0FAAwFV,QAAeC,cAAkB,GAI9HA,EAAM,IAERU,MAAKL,IACJM,QAAQC,IAAIP,EAAI,IAEjBQ,OAAMP,IACLK,QAAQC,IAAIN,EAAI,G,CAwBlBQ,CAAcnB,EAAOC,GACrBH,EAAQE,GAAS,G,CATnBF,E","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        res(\n          document.body.insertAdjacentHTML(\n            'beforeend',\n            `<span style =\"display: block; background-color: yellow; width: 300px\">✅ Fulfilled promise ${position} in ${delay}ms</span>`\n          )\n        );\n      } else {\n        rej(\n          document.body.insertAdjacentHTML(\n            'beforeend',\n            `<span style =\"display: block; background-color: grey; width: 300px\">❌ Rejected promise ${position} in ${delay}ms</span>`\n          )\n        );\n      }\n    }, delay);\n  })\n    .then(res => {\n      console.log(res);\n    })\n    .catch(rej => {\n      console.log(rej);\n    });\n}\n\nconst refs = {\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  submitButton: document.querySelector('[type=\"submit\"]'),\n};\nconst { delay, step, amount, submitButton } = refs;\n\nrefs.submitButton.addEventListener('click', onsubmitButtonClick);\n\nfunction onsubmitButtonClick(e) {\n  e.preventDefault();\n  mainFn();\n  function mainFn(n = 1) {\n    let count = n;\n    let stepDelay = ~~delay.value + ~~step.value * count;\n\n    if (Number(amount.value) < count) {\n      return;\n    }\n    createPromise(count, stepDelay);\n    mainFn((count += 1));\n  }\n}\n"],"names":["$47d4ff9957288465$var$refs","delay","document","querySelector","step","amount","submitButton","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$submitButton","addEventListener","e","preventDefault","mainFn","n","count","stepDelay","value","Number","position","delay1","shouldResolve","Math","random","Promise","res","rej","setTimeout","body","insertAdjacentHTML","then","console","log","catch","$47d4ff9957288465$var$createPromise"],"version":3,"file":"03-promises.28488a1d.js.map"}